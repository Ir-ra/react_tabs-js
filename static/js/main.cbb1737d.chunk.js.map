{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","onTabSelected","foundTab","className","map","tab","id","title","classNames","href","onClick","content","App","preparedTabs","useState","selectedTabId","setSelectedTabId","find","tabId","useSelectedTab","handleSelectingTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,cAAeC,EAAxB,EAAwBA,SAAxB,OAClB,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAACC,GACT,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,oBACEJ,UAAWK,IAAWF,IAAOJ,EAASI,GAAK,YAAc,IACzD,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMH,GACV,UAAQ,UACRI,QAAS,kBAAMT,EAAcK,IAH/B,SAKGC,KAPED,UAef,qBAAKH,UAAU,QAAQ,UAAQ,cAA/B,SACGD,EAASS,cCvBHX,EAAO,CAClB,CAAEM,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,gBAa7BC,EAAM,WACjB,IAAMC,EAAY,UAAOb,GACzB,EAXqB,SAACA,GACtB,MAA0Cc,mBAASd,EAAK,GAAGM,IAA3D,mBAAOS,EAAP,KAAsBC,EAAtB,KAKA,MAAO,CAJUhB,EAAKiB,MAAK,SAAAZ,GAAG,OAAIA,EAAIC,KAAOS,KAElB,SAAAG,GAAK,OAAKF,EAAiBE,KAOfC,CAAeN,GAAtD,mBAAOX,EAAP,KAAiBkB,EAAjB,KAEA,OACE,sBAAKjB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAASK,SAE/B,cAAC,EAAD,CACEP,KAAMa,EACNZ,cAAemB,EACflB,SAAUA,QC/BlBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cbb1737d.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const Tabs = ({ tabs, onTabSelected, foundTab }) => (\n  <div data-cy=\"TabsComponent\">\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map((tab) => {\n          const { id, title } = tab;\n\n          return (\n            <li\n              className={classNames(id === foundTab.id ? 'is-active' : '')}\n              data-cy=\"Tab\"\n              key={id}\n            >\n              <a\n                href={`#${id}`}\n                data-cy=\"TabLink\"\n                onClick={() => onTabSelected(id)}\n              >\n                {title}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n\n    <div className=\"block\" data-cy=\"tab-content\">\n      {foundTab.content}\n    </div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\n// eslint-disable-next-line no-shadow\nconst useSelectedTab = (tabs) => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const foundTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const handleSelectingTab = tabId => (setSelectedTabId(tabId));\n\n  return [foundTab, handleSelectingTab];\n};\n\nexport const App = () => {\n  const preparedTabs = [...tabs];\n  const [foundTab, handleSelectingTab] = useSelectedTab(preparedTabs);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${foundTab.title}`}\n      </h1>\n      <Tabs\n        tabs={preparedTabs}\n        onTabSelected={handleSelectingTab}\n        foundTab={foundTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}