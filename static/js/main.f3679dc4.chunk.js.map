{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","onTabSelected","foundTab","foundId","id","content","className","map","tab","title","classNames","href","onClick","App","preparedTabs","givenTabs","useState","selectedTabId","setSelectedTabId","find","tabId","useSelectedTab","handleSelectingTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAC9BC,EAAqBD,EAAzBE,GAAaC,EAAYH,EAAZG,QAErB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAACC,GACT,IAAQJ,EAAcI,EAAdJ,GAAIK,EAAUD,EAAVC,MAEZ,OACE,oBACEH,UAAWI,IAAWN,IAAOD,EAAU,YAAc,IACrD,UAAQ,MAFV,SAKE,mBACEQ,KAAI,WAAMP,GACV,UAAQ,UACRQ,QAAS,kBAAMX,EAAcG,IAH/B,SAKGK,KAPEL,UAef,qBAAKE,UAAU,QAAQ,UAAQ,cAA/B,SACGD,QC1BIL,EAAO,CAClB,CAAEI,GAAI,QAASK,MAAO,QAASJ,QAAS,eACxC,CAAED,GAAI,QAASK,MAAO,QAASJ,QAAS,eACxC,CAAED,GAAI,QAASK,MAAO,QAASJ,QAAS,gBAgB7BQ,EAAM,WACjB,IAAMC,EAAY,UAAOd,GACzB,EAfqB,SAACe,GACtB,MAA0CC,mBAASD,EAAU,GAAGX,IAAhE,mBAAOa,EAAP,KAAsBC,EAAtB,KASA,MAAO,CARUH,EAAUI,MAAK,SAAAX,GAAG,OAAIA,EAAIJ,KAAOa,KAEvB,SAACG,GACtBH,IAAkBG,GACpBF,EAAiBE,KASkBC,CAAeP,GAAtD,mBAAOZ,EAAP,KAAiBoB,EAAjB,KACQb,EAAUP,EAAVO,MAER,OACE,sBAAKH,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBG,KAEtB,cAAC,EAAD,CACET,KAAMc,EACNb,cAAeqB,EACfpB,SAAUA,QCnClBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f3679dc4.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const Tabs = ({ tabs, onTabSelected, foundTab }) => {\n  const { id: foundId, content } = foundTab;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames(id === foundId ? 'is-active' : '')}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => onTabSelected(id)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst useSelectedTab = (givenTabs) => {\n  const [selectedTabId, setSelectedTabId] = useState(givenTabs[0].id);\n  const foundTab = givenTabs.find(tab => tab.id === selectedTabId);\n\n  const handleSelectingTab = (tabId) => {\n    if (selectedTabId !== tabId) {\n      setSelectedTabId(tabId);\n    }\n  };\n\n  return [foundTab, handleSelectingTab];\n};\n\nexport const App = () => {\n  const preparedTabs = [...tabs];\n  const [foundTab, handleSelectingTab] = useSelectedTab(preparedTabs);\n  const { title } = foundTab;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n      <Tabs\n        tabs={preparedTabs}\n        onTabSelected={handleSelectingTab}\n        foundTab={foundTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}